Bloom Filter Manipulation tool

Usage:
    bloom-tool create --size=SIZE [--fpp=FPP] [--] NAME
    bloom-tool insert [--hex] [--source=FILE] [--] NAME
    bloom-tool check [--hex] [--source=FILE] [--] NAME
    bloom-tool benchmark --size=SIZE [--fpp=FPP]
    bloom-tool (-h | --help)

Commands:
    create                  Creates a new bloom filter.
    insert                  Inserts values to the filter from standard input.
                            Each line is a separate value.
    check                   Checks if values provided in the standard input appear in the filter,
                            printing matches to the standard output, and skipping not matched values.
                            Each line is a separate value.
    benchmark               Runs performance benchmark and correctness verification
                            by creating a filter in a temporary directory,
                            populating it with random data and checking what can be found.

Options:
    -h --help               Show this screen.
    --version               Show version.
    -s SIZE --size=SIZE     Expected number of elements to be inserted
    --fpp=fpp               Target maximum probability of false positives (floating point) [default: 1e-6]
    --source=FILE           Source file for entries to be inserted or checked,
                            each line is a separate entry, (default is stdin)
    --hex                   Interprets input values as hexadecimal string when inserting or checking.
                            Values are converted to bytes before inserting, if this conversion fail,
                            the string is inserted a normal way.

Examples:
    bloom-tool create --size=1000000 --fpp=1e-6 my.bloom
    # creates a new filter "my.bloom" for 1M insertions and 1 to 1M false positive rate

    bloom-tool insert my.bloom < entries.txt
    # inserts lines from entries.txt to my.bloom


    echo "example" | bloom-tool check my.bloom
    # checks if string "example" might be inserted in my.bloom,
    # printing it standard output if it might be true, and skipping it otherwise

    bloom-tool insert --hex my.bloom < hashes.txt
    # inserts hexadecimal from hashes.txt to my.bloom
    # useful if the filter is intended to be use from Java code generating some hashes

    build/dist/bloom-tool create pwned-hex.bloom --size=600000000 --fpp=1e-8
    7z x ~/Downloads/pwned-passwords-ordered-by-hash.7z -so | awk -F":" '{print $1}' | build/dist/bloom-tool insert --hex pwned-hex.bloom
    # loads hashes from pwned database


