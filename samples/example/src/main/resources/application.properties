server.address=0.0.0.0
server.port=8080

# Configure stigma store
nixer.stigma.cookie=Stigma
nixer.stigma.tokenLifetime=P1D
nixer.stigma.encryptionKeyFile=classpath:stigma-jwk.json
nixer.stigma.decryptionKeyFile=classpath:stigma-jwk.json

# Configure logging of events to ElasticSearch [disabled]
# requires ElasticSearch running
nixer.events.elastic.enabled=false
nixer.events.elastic.index=nixer

#spring.elasticsearch.jest.connection-timeout=3s
#spring.elasticsearch.jest.multi-threaded=true
#spring.elasticsearch.jest.read-timeout=3s
#spring.elasticsearch.jest.uris=http://localhost:9200
#spring.elasticsearch.jest.username=
#spring.elasticsearch.jest.password=
#spring.elasticsearch.jest.proxy.host=
#spring.elasticsearch.jest.proxy.port=

# Configures nixer filters
nixer.filters.dry-run=false

# Configure matching request ip to defined ip-ranges
nixer.filter.ip.enabled=true
nixer.filter.ip.ip-prefixes-path=classpath:ip-ranges.json

#Configure rule for consecutive failed login per ip
nixer.rules.ip-failed-login-threshold.enabled=true
nixer.rules.ip-failed-login-threshold.threshold=5
nixer.rules.ip-failed-login-threshold.window=5m


# Configures password checking against pwned passwords bloom file
nixer.pwned.check.enabled=true
nixer.pwned.check.pwnedFilePath=classpath:pwned-database/example.bloom
nixer.pwned.check.maxPasswordLength=50

# Configure captcha checking
nixer.login.captcha.condition=SESSION_CONTROLLED
nixer.login.captcha.param=g-recaptcha-response

# Configure Google's Recaptcha v2 integration
nixer.captcha.recaptcha.verifyUrl=https://www.google.com/recaptcha/api/siteverify
# Use those test keys to make captcha always pass. Suitable for automated tests
#nixer.captcha.recaptcha.key.site=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
#nixer.captcha.recaptcha.key.secret=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
nixer.captcha.recaptcha.key.site=6LetVa4UAAAAAPpwWsl3LRRk8qCRfZvKJjE0U4Om
nixer.captcha.recaptcha.key.secret=6LetVa4UAAAAAAAa1f1PaqgStH8rgV5sqTlUxGd4
nixer.captcha.recaptcha.http.timeout.connect=2000
nixer.captcha.recaptcha.http.timeout.read=2000
nixer.captcha.recaptcha.http.timeout.connectionRequest=2000
nixer.captcha.recaptcha.http.maxConnections=10

# Enable metrics for captcha. Metrics will be reported via micrometer
nixer.captcha.metrics.enabled=true

# Expose Actuator endpoints for managing captcha & behaviors at runtime
management.endpoints.web.exposure.include=metrics,captcha,loggers,behaviors

spring.datasource.url=jdbc:h2:mem:nixer-plugin
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=nixer
spring.datasource.password=nixer-test
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Configure micrometer to use Influx exporter.
# requires Influx running
management.metrics.export.influx.enabled=true
management.metrics.export.influx.auto-create-db=true
management.metrics.export.influx.batch-size=10000
management.metrics.export.influx.compressed=true
management.metrics.export.influx.connect-timeout=1s
management.metrics.export.influx.consistency=one
management.metrics.export.influx.db=mydb
management.metrics.export.influx.num-threads=2
management.metrics.export.influx.password=root
management.metrics.export.influx.read-timeout=10s
management.metrics.export.influx.step=1m
management.metrics.export.influx.uri=http://localhost:8086
management.metrics.export.influx.user-name=root

#server.use-forward-headers=true
